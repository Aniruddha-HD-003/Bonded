# Generated by Django 5.2.3 on 2025-07-09 06:34

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('games', '0004_fillintheblank_thisorthat_twotruthsandlie_and_more'),
        ('posts', '0003_alter_post_media'),
        ('users', '0002_remove_user_group_groupmembership'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GuessWho',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('photo_url', models.URLField(help_text='Childhood or mystery photo URL')),
                ('hint', models.CharField(blank=True, max_length=300)),
                ('points_reward', models.IntegerField(default=15)),
                ('time_limit', models.IntegerField(default=300, help_text='Time limit in seconds')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('correct_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guess_who_photos', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_guess_who', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guess_who_games', to='users.group')),
            ],
        ),
        migrations.CreateModel(
            name='ReactionRace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('target_reaction_type', models.CharField(help_text='Type of reaction to race for', max_length=50)),
                ('time_limit', models.IntegerField(default=300, help_text='Time limit in seconds')),
                ('points_reward', models.IntegerField(default=5)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_reaction_races', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reaction_races', to='users.group')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reaction_races', to='posts.post')),
            ],
        ),
        migrations.CreateModel(
            name='SpotTheDifference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_image', models.URLField(help_text='Original image URL')),
                ('modified_image', models.URLField(help_text='Modified image URL with differences')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=20)),
                ('differences_count', models.IntegerField(default=5)),
                ('time_limit', models.IntegerField(default=60, help_text='Time limit in seconds')),
                ('points_reward', models.IntegerField(default=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_spot_difference', to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spot_difference_games', to='users.group')),
            ],
        ),
        migrations.CreateModel(
            name='GuessWhoAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_correct', models.BooleanField()),
                ('time_taken', models.IntegerField(help_text='Time taken in seconds')),
                ('attempted_at', models.DateTimeField(auto_now_add=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='games.guesswho')),
                ('guessed_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guess_who_guesses', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guess_who_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('game', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ReactionRaceParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction_time', models.IntegerField(help_text='Time taken to react in seconds')),
                ('position', models.IntegerField(help_text='Position in the race (1st, 2nd, etc.)')),
                ('points_earned', models.IntegerField(default=0)),
                ('participated_at', models.DateTimeField(auto_now_add=True)),
                ('race', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='games.reactionrace')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reaction_race_participations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['position'],
                'unique_together': {('race', 'user')},
            },
        ),
        migrations.CreateModel(
            name='SpotTheDifferenceAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('differences_found', models.IntegerField(default=0)),
                ('time_taken', models.IntegerField(help_text='Time taken in seconds')),
                ('is_completed', models.BooleanField(default=False)),
                ('score', models.IntegerField(default=0)),
                ('attempted_at', models.DateTimeField(auto_now_add=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='games.spotthedifference')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spot_difference_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('game', 'user')},
            },
        ),
        migrations.CreateModel(
            name='WordCloud',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('word_data', models.JSONField(help_text='Dictionary of words and their frequencies')),
                ('total_words', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='word_clouds', to='users.group')),
            ],
            options={
                'unique_together': {('group', 'period', 'start_date')},
            },
        ),
    ]
